{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/frontend/Screen/SplashScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport axios from 'axios';\nvar http = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  withCredentials: true\n});\n\nvar SplashScreen = function SplashScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      animating = _useState2[0],\n      setAnimating = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setAnimating(false);\n      http.get('/protected').then(function (response) {\n        return response.data;\n      }).then(function (responseJson) {\n        console.log(responseJson);\n\n        if (responseJson.result) {\n          navigation.replace(responseJson.result ? 'DrawerNavigationRoutes' : 'Auth');\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }, 1000);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: require(\"../Image/aboutreact.png\"),\n    style: {\n      width: '90%',\n      resizeMode: 'contain',\n      margin: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(ActivityIndicator, {\n    animating: animating,\n    color: \"#FFFFFF\",\n    size: \"large\",\n    style: styles.activityIndicator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SplashScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#307ecc'\n  },\n  activityIndicator: {\n    alignItems: 'center',\n    height: 80\n  }\n});","map":{"version":3,"sources":["/frontend/Screen/SplashScreen.js"],"names":["React","useState","useEffect","AsyncStorage","axios","http","create","baseURL","withCredentials","SplashScreen","navigation","animating","setAnimating","setTimeout","get","then","response","data","responseJson","console","log","result","replace","catch","error","styles","container","require","width","resizeMode","margin","activityIndicator","StyleSheet","flex","alignItems","justifyContent","backgroundColor","height"],"mappings":";;;;;AAIA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE,2BAAX;AAAwCC,EAAAA,eAAe,EAAE;AAAzD,CAAb,CAAb;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBAEHT,QAAQ,CAAC,IAAD,CAFL;AAAA;AAAA,MAE9BU,SAF8B;AAAA,MAEnBC,YAFmB;;AAIrCV,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAQAP,MAAAA,IAAI,CAACS,GAAL,CAAS,YAAT,EAAuBC,IAAvB,CACE,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAb;AAAA,OADV,EAEEF,IAFF,CAEO,UAACG,YAAD,EAAkB;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAEA,YAAIA,YAAY,CAACG,MAAjB,EAAyB;AAOvBX,UAAAA,UAAU,CAACY,OAAX,CAAmBJ,YAAY,CAACG,MAAb,GAAsB,wBAAtB,GAA+C,MAAlE;AACD;AACF,OAdD,EAcGE,KAdH,CAcS,UAAUC,KAAV,EAAiB;AACxBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,OAhBD;AAqCD,KA9CS,EA8CP,IA9CO,CAAV;AA+CD,GAhDQ,EAgDN,EAhDM,CAAT;AAkDA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEC,OAAO,2BADjB;AAEE,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,KAAR;AAAeC,MAAAA,UAAU,EAAE,SAA3B;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,iBAAD;AACE,IAAA,SAAS,EAAEnB,SADb;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEc,MAAM,CAACM,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAcD,CApED;;AAsEA,eAAetB,YAAf;AAEA,IAAMgB,MAAM,GAAGO,UAAU,CAAC1B,MAAX,CAAkB;AAC/BoB,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BL,EAAAA,iBAAiB,EAAE;AACjBG,IAAAA,UAAU,EAAE,QADK;AAEjBG,IAAAA,MAAM,EAAE;AAFS;AAPY,CAAlB,CAAf","sourcesContent":["// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React, {useState, useEffect} from 'react';\nimport {ActivityIndicator, View, StyleSheet, Image} from 'react-native';\n\nimport AsyncStorage from '@react-native-community/async-storage';\n\nimport axios from 'axios';\nconst http = axios.create({ baseURL: 'http://localhost:5000/api', withCredentials: true })\n\nconst SplashScreen = ({navigation}) => {\n  //State for ActivityIndicator animation\n  const [animating, setAnimating] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAnimating(false);\n      //Check if user_id is set or not\n      //If not then send for Authentication\n      //else send to Home Screen\n      // AsyncStorage.getItem('user_id').then((value) =>\n      //   navigation.replace(value === null ? 'Auth' : 'DrawerNavigationRoutes'),\n      // );\n\n      http.get('/protected').then(\n        response => response.data\n      ).then((responseJson) => {\n        console.log(responseJson);\n        // If server response message same as Data Matched\n        if (responseJson.result) {\n          // AsyncStorage.setItem('user_id', responseJson.data[0].user_id);\n          // AsyncStorage.setItem('user_name', responseJson.data[0].user_name);\n          // AsyncStorage.setItem('user_email', responseJson.data[0].user_email);\n          // AsyncStorage.setItem('user_pwd', responseJson.data[0].user_pwd);\n          // console.log(responseJson.data[0].user_id);\n          // http.defaults.headers.common = {'Authorization': `Bearer ${responseJson.token}`}\n          navigation.replace(responseJson.result ? 'DrawerNavigationRoutes':'Auth' )\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      // fetch('http://192.168.1.2:5000/api/protected', {\n      //   method: 'GET',\n      //   headers: {\n      //     'Accept': 'application/json',\n      //     'Content-Type': 'application/json'\n      //   }\n      // })\n      //   .then((response) => response.json())\n      //   .then((responseJson) => {\n      //     //Hide Loader\n      //     console.log(\"responseJson\",responseJson);\n      //     // If server response message same as Data Matched\n      //     navigation.replace(responseJson.result ? 'DrawerNavigationRoutes':'Auth' )\n      //   })\n      //   .catch((error) => {\n      //     //Hide Loader\n      //     console.error(error);\n      //   });\n\n    }, 1000);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('../Image/aboutreact.png')}\n        style={{width: '90%', resizeMode: 'contain', margin: 30}}\n      />\n      <ActivityIndicator\n        animating={animating}\n        color=\"#FFFFFF\"\n        size=\"large\"\n        style={styles.activityIndicator}\n      />\n    </View>\n  );\n};\n\nexport default SplashScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#307ecc',\n  },\n  activityIndicator: {\n    alignItems: 'center',\n    height: 80,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}