{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/frontend/Screen/SplashScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-community/async-storage';\n\nvar SplashScreen = function SplashScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      animating = _useState2[0],\n      setAnimating = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setAnimating(false);\n      fetch('http://192.168.1.2:5000/api/protected', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(\"responseJson\", responseJson);\n\n        if (responseJson.status == 1) {\n          AsyncStorage.setItem('user_id', responseJson.data[0].user_id);\n          console.log(responseJson.data[0].user_id);\n          navigation.replace('DrawerNavigationRoutes');\n        } else {\n          setErrortext('Please check your email id or password');\n          console.log('Please check your email id or password');\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }, 5000);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: require(\"../Image/aboutreact.png\"),\n    style: {\n      width: '90%',\n      resizeMode: 'contain',\n      margin: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(ActivityIndicator, {\n    animating: animating,\n    color: \"#FFFFFF\",\n    size: \"large\",\n    style: styles.activityIndicator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SplashScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#307ecc'\n  },\n  activityIndicator: {\n    alignItems: 'center',\n    height: 80\n  }\n});","map":{"version":3,"sources":["/frontend/Screen/SplashScreen.js"],"names":["React","useState","useEffect","AsyncStorage","SplashScreen","navigation","animating","setAnimating","setTimeout","fetch","method","headers","then","response","json","responseJson","console","log","status","setItem","data","user_id","replace","setErrortext","catch","error","styles","container","require","width","resizeMode","margin","activityIndicator","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","height"],"mappings":";;;;;AAIA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBAEHJ,QAAQ,CAAC,IAAD,CAFL;AAAA;AAAA,MAE9BK,SAF8B;AAAA,MAEnBC,YAFmB;;AAIrCL,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAOAE,MAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,QAAAA,MAAM,EAAE,KADqC;AAE7CC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAFoC,OAA1C,CAAL,CAOGC,IAPH,CAOQ,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAPR,EAQGF,IARH,CAQQ,UAACG,YAAD,EAAkB;AAEtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,YAA3B;;AAEA,YAAIA,YAAY,CAACG,MAAb,IAAuB,CAA3B,EAA8B;AAC5Bf,UAAAA,YAAY,CAACgB,OAAb,CAAqB,SAArB,EAAgCJ,YAAY,CAACK,IAAb,CAAkB,CAAlB,EAAqBC,OAArD;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACK,IAAb,CAAkB,CAAlB,EAAqBC,OAAjC;AACAhB,UAAAA,UAAU,CAACiB,OAAX,CAAmB,wBAAnB;AACD,SAJD,MAIO;AACLC,UAAAA,YAAY,CAAC,wCAAD,CAAZ;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD;AACF,OApBH,EAqBGO,KArBH,CAqBS,UAACC,KAAD,EAAW;AAEhBT,QAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACD,OAxBH;AAyBD,KAjCS,EAiCP,IAjCO,CAAV;AAkCD,GAnCQ,EAmCN,EAnCM,CAAT;AAqCA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEC,OAAO,2BADjB;AAEE,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,KAAR;AAAeC,MAAAA,UAAU,EAAE,SAA3B;AAAsCC,MAAAA,MAAM,EAAE;AAA9C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,iBAAD;AACE,IAAA,SAAS,EAAEzB,SADb;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEoB,MAAM,CAACM,iBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAcD,CAvDD;;AAyDA,eAAe5B,YAAf;AAEA,IAAMsB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BN,EAAAA,iBAAiB,EAAE;AACjBI,IAAAA,UAAU,EAAE,QADK;AAEjBG,IAAAA,MAAM,EAAE;AAFS;AAPY,CAAlB,CAAf","sourcesContent":["// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React, {useState, useEffect} from 'react';\nimport {ActivityIndicator, View, StyleSheet, Image} from 'react-native';\n\nimport AsyncStorage from '@react-native-community/async-storage';\n\nconst SplashScreen = ({navigation}) => {\n  //State for ActivityIndicator animation\n  const [animating, setAnimating] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAnimating(false);\n      //Check if user_id is set or not\n      //If not then send for Authentication\n      //else send to Home Screen\n      // AsyncStorage.getItem('user_id').then((value) =>\n      //   navigation.replace(value === null ? 'Auth' : 'DrawerNavigationRoutes'),\n      // );\n      fetch('http://192.168.1.2:5000/api/protected', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then((response) => response.json())\n        .then((responseJson) => {\n          //Hide Loader\n          console.log(\"responseJson\",responseJson);\n          // If server response message same as Data Matched\n          if (responseJson.status == 1) {\n            AsyncStorage.setItem('user_id', responseJson.data[0].user_id);\n            console.log(responseJson.data[0].user_id);\n            navigation.replace('DrawerNavigationRoutes');\n          } else {\n            setErrortext('Please check your email id or password');\n            console.log('Please check your email id or password');\n          }\n        })\n        .catch((error) => {\n          //Hide Loader\n          console.error(error);\n        });\n    }, 5000);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('../Image/aboutreact.png')}\n        style={{width: '90%', resizeMode: 'contain', margin: 30}}\n      />\n      <ActivityIndicator\n        animating={animating}\n        color=\"#FFFFFF\"\n        size=\"large\"\n        style={styles.activityIndicator}\n      />\n    </View>\n  );\n};\n\nexport default SplashScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#307ecc',\n  },\n  activityIndicator: {\n    alignItems: 'center',\n    height: 80,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}