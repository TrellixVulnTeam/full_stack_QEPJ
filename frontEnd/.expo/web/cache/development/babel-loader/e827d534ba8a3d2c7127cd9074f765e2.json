{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/frontend/Screen/DrawerScreens/HomeScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { DataTable } from 'react-native-paper';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport axios from 'axios';\nvar http = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  withCredentials: true\n});\n\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      user_id = _useState2[0],\n      setUser_id = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user_name = _useState4[0],\n      setUser_name = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  useEffect(function () {\n    http.get('/userData').then(function (response) {\n      return response.data;\n    }).then(function (responseJson) {\n      if (responseJson) {\n        setUser_id(responseJson.id);\n        setUser_name(responseJson.name);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    http.get('/clinicData').then(function (response) {\n      return response.data;\n    }).then(function (responseJson) {\n      console.log(\"/clinicData\", \"responseJson\", responseJson.data);\n      setData(responseJson.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(DataTable, {\n    style: {\n      height: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(DataTable.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"User ID\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Doctor ID\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Patient ID\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Medication ID\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Diagnosis detail\")), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, data && data.length > 0 ? data.map(function (item, index) {\n    console.log(\"item.NAME\", item.NAME);\n    return React.createElement(DataTable.Row, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, React.createElement(DataTable.Cell, {\n      numeric: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }, item.user_id), React.createElement(DataTable.Cell, {\n      numeric: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, item.doctor_id), React.createElement(DataTable.Cell, {\n      numeric: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }\n    }, item.patient_id), React.createElement(DataTable.Cell, {\n      numeric: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, item.medication_id), React.createElement(DataTable.Cell, {\n      numeric: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, item.diagnosis_detail));\n  }) : false))), React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 16,\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      color: 'grey'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"User: \", user_name, \", ID: \", user_id)));\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/frontend/Screen/DrawerScreens/HomeScreen.js"],"names":["React","useState","useEffect","DataTable","AsyncStorage","axios","http","create","baseURL","withCredentials","HomeScreen","user_id","setUser_id","user_name","setUser_name","data","setData","get","then","response","responseJson","id","name","catch","error","console","log","flex","height","length","map","item","index","NAME","doctor_id","patient_id","medication_id","diagnosis_detail","padding","justifyContent","alignItems","color"],"mappings":";;;;;AAIA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE,2BAAX;AAAwCC,EAAAA,eAAe,EAAE;AAAzD,CAAb,CAAb;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACOT,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,MAChBU,OADgB;AAAA,MACPC,UADO;;AAAA,mBAEWX,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,MAEhBY,SAFgB;AAAA,MAELC,YAFK;;AAAA,mBAGCb,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,MAGhBc,IAHgB;AAAA,MAGVC,OAHU;;AAMvBd,EAAAA,SAAS,CAAC,YAAM;AAMdI,IAAAA,IAAI,CAACW,GAAL,CAAS,WAAT,EAAsBC,IAAtB,CACE,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACJ,IAAb;AAAA,KADV,EAEEG,IAFF,CAEO,UAACE,YAAD,EAAkB;AACvB,UAAIA,YAAJ,EAAkB;AAChBR,QAAAA,UAAU,CAACQ,YAAY,CAACC,EAAd,CAAV;AACAP,QAAAA,YAAY,CAACM,YAAY,CAACE,IAAd,CAAZ;AACD;AACF,KAPD,EAOGC,KAPH,CAOS,UAAUC,KAAV,EAAiB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KATD;AAWAlB,IAAAA,IAAI,CAACW,GAAL,CAAS,aAAT,EAAwBC,IAAxB,CACE,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACJ,IAAb;AAAA,KADV,EAEEG,IAFF,CAEO,UAACE,YAAD,EAAkB;AACvBK,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,cAA3B,EAA2CN,YAAY,CAACL,IAAxD;AACAC,MAAAA,OAAO,CAACI,YAAY,CAACL,IAAd,CAAP;AAKD,KATD,EASGQ,KATH,CASS,UAAUC,KAAV,EAAiB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXD;AAYD,GA7BQ,EA6BN,EA7BM,CAAT;AA8BA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,KAAX;AAAiB,IAAA,OAAO,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,SAAD,CAAW,KAAX;AAAiB,IAAA,OAAO,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,SAAD,CAAW,KAAX;AAAiB,IAAA,OAAO,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE,oBAAC,SAAD,CAAW,KAAX;AAAiB,IAAA,OAAO,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,EAKE,oBAAC,SAAD,CAAW,KAAX;AAAiB,IAAA,OAAO,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CADF,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIb,IAAI,IAAIA,IAAI,CAACc,MAAL,GAAc,CAAtB,GACEd,IAAI,CAACe,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACxBP,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBK,IAAI,CAACE,IAA7B;AACA,WACE,oBAAC,SAAD,CAAW,GAAX;AAAe,MAAA,GAAG,EAAED,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,IAAI,CAACpB,OAA9B,CADF,EAEE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBoB,IAAI,CAACG,SAA9B,CAFF,EAGE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBH,IAAI,CAACI,UAA9B,CAHF,EAIE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBJ,IAAI,CAACK,aAA9B,CAJF,EAKE,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBL,IAAI,CAACM,gBAA9B,CALF,CADF;AASD,GAXD,CADF,GAcE,KAhBN,CADF,CARF,CADF,EA+BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEV,MAAAA,IAAI,EAAE,CAAR;AAAWW,MAAAA,OAAO,EAAE,EAApB;AAAwBC,MAAAA,cAAc,EAAE,UAAxC;AAAoDC,MAAAA,UAAU,EAAE,QAAhE;AAAyEC,MAAAA,KAAK,EAAE;AAAhF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACS5B,SADT,YAC0BF,OAD1B,CADF,CA/BF,CADF;AAuCD,CA3ED;;AA6EA,eAAeD,UAAf","sourcesContent":["// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Text, SafeAreaView, ScrollView } from 'react-native';\nimport { DataTable } from 'react-native-paper';\n\nimport AsyncStorage from '@react-native-community/async-storage';\n\nimport axios from 'axios';\n\nconst http = axios.create({ baseURL: 'http://localhost:5000/api', withCredentials: true })\n\nconst HomeScreen = () => {\n  const [user_id, setUser_id] = useState('');\n  const [user_name, setUser_name] = useState('');\n  const [data, setData] = useState([]);\n  // const [user_email, setUser_email] = useState('');\n  // const [user_pwd, setUser_pwd] = useState('');\n  useEffect(() => {\n    // AsyncStorage.getItem('user_id').then((value) => setUser_id(value))\n    // AsyncStorage.getItem('user_name').then((value) => setUser_name(value))\n    // AsyncStorage.getItem('user_email').then((value) => setUser_email(value))\n    // AsyncStorage.getItem('user_pwd').then((value) => setUser_pwd(value))\n\n    http.get('/userData').then(\n      response => response.data\n    ).then((responseJson) => {\n      if (responseJson) {\n        setUser_id(responseJson.id);\n        setUser_name(responseJson.name);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    http.get('/clinicData').then(\n      response => response.data\n    ).then((responseJson) => {\n      console.log(\"/clinicData\", \"responseJson\", responseJson.data)\n      setData(responseJson.data)\n      // if (responseJson) {\n      //   setUser_id(responseJson.id);\n      //   setUser_name(responseJson.name);\n      // }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <DataTable style={{ height: 1 }}>\n        <DataTable.Header>\n          <DataTable.Title numeric>User ID</DataTable.Title>\n          <DataTable.Title numeric>Doctor ID</DataTable.Title>\n          <DataTable.Title numeric>Patient ID</DataTable.Title>\n          <DataTable.Title numeric>Medication ID</DataTable.Title>\n          <DataTable.Title numeric>Diagnosis detail</DataTable.Title>\n        </DataTable.Header>\n        <View>\n          <ScrollView>\n            {\n              data && data.length > 0 ?\n                data.map((item, index) => {\n                  console.log(\"item.NAME\",item.NAME)\n                  return (\n                    <DataTable.Row key={index}>\n                      <DataTable.Cell numeric>{item.user_id}</DataTable.Cell>\n                      <DataTable.Cell numeric>{item.doctor_id}</DataTable.Cell>\n                      <DataTable.Cell numeric>{item.patient_id}</DataTable.Cell>\n                      <DataTable.Cell numeric>{item.medication_id}</DataTable.Cell>\n                      <DataTable.Cell numeric>{item.diagnosis_detail}</DataTable.Cell>\n                    </DataTable.Row>\n                  );\n                })\n                :\n                false\n            }\n          </ScrollView>\n        </View>\n      </DataTable>\n      <View style={{ flex: 1, padding: 16, justifyContent: 'flex-end', alignItems: 'center',color: 'grey' }}>\n        <Text>\n          User: {user_name}, ID: {user_id}\n        </Text>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}